import { trpc } from "@/utils/trpc";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

/**
 *
 * Show inputs (email + password)
 * Show form
 * have a a button that submits
 *
 */

const Home: NextPage = () => {
  const { mutate, data, error } = trpc.auth.login.useMutation();

  const onSubmit = (event: any) => {
    event.preventDefault();
    if (event.target) {
      const data = new FormData(event.target);
      const form = Object.fromEntries(data.entries());
      if (form.email && form.password) {
        mutate({
          email: String(form.email),
          password: String(form.password),
        });
      }
    }
  };
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen items-center justify-center bg-slate-500 ">
        <div className="w-full rounded-lg bg-white px-8 py-6 shadow-sm sm:max-w-md">
          {error?.message && (
            <div className="mb-6 rounded-lg bg-red-200 p-4 text-red-700">
              {error?.message}
            </div>
          )}
          {data?.user && (
            <div className="mb-6 rounded-lg bg-green-200 p-4 text-green-700">
              {data?.user.name}
            </div>
          )}
          <form onSubmit={onSubmit}>
            <div>
              <label
                className="block text-sm font-medium text-gray-700"
                htmlFor="email"
              >
                Email
              </label>
              <input
                className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                id="email"
                type="email"
                name="email"
                required
              />
            </div>

            <div className="mt-4">
              <label
                className="block text-sm font-medium text-gray-700"
                htmlFor="password"
              >
                Password
              </label>
              <input
                className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                id="password"
                type="password"
                required
                name="password"
              />
            </div>

            <div className="mt-8 flex items-center justify-end">
              <button
                type="submit"
                className="inline-flex w-full items-center justify-center rounded-md border border-transparent bg-gray-800 px-4 py-2 text-center text-xs font-semibold uppercase tracking-widest text-white transition hover:bg-gray-700 focus:border-gray-900 focus:outline-none focus:ring  focus:ring-gray-300 active:bg-gray-900 disabled:opacity-25"
              >
                <span>Login</span>
              </button>
            </div>
            <div className="mt-4 text-center">
              <Link
                className="text-sm text-gray-500 hover:text-gray-900"
                href="/auth/register"
              >
                Register
              </Link>
            </div>
            <div className="mt-4 text-center">
              <Link
                className="text-sm text-gray-500 hover:text-gray-900"
                href="/auth/forget-password"
              >
                Forgot password?
              </Link>
            </div>
          </form>
        </div>
      </main>
      {/* <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">

        </div>
      </main> */}
    </>
  );
};

// export function getServerSideProps() {
//   console.log("this is the server");
//   return { props: {} };
// }

export default Home;
